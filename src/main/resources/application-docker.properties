spring.datasource.url=jdbc:postgresql://postgres_db:5432/tradedb
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driverClassName=org.postgresql.Driver
# Redis Configuration using Jedis
spring.data.redis.host=redis_db
spring.data.redis.port=6379
# spring.data.redis.password=your_redis_password # Uncomment and replace if your Redis instance requires a password
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=-1ms
spring.cache.type=redis
# Kafka Configuration
spring.kafka.bootstrap-servers=kafka_broker:29092

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=1
spring.kafka.producer.properties.request.timeout.ms=60000
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.max.request.size=2147483647
spring.kafka.producer.properties.metadata.max.age.ms=180000 # Default is 300000 (5 mins), but ensure it's not too low if you changed it
spring.kafka.producer.properties.max.block.ms=120000 # Increase from 60000, max time to block for metadata or buffer space


# Consumer Configuration
spring.kafka.consumer.group-id=my_app_group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.session.timeout.ms=30000
spring.kafka.consumer.properties.heartbeat.interval.ms=10000
spring.kafka.consumer.properties.fetch.max.bytes=2147483647
spring.kafka.consumer.properties.max.partition.fetch.bytes=2147483647
spring.kafka.consumer.properties.metadata.max.age.ms=180000 # Default is 300000 (5 mins), ensure it's not too low
spring.kafka.consumer.properties.default.api.timeout.ms=120000 # Default 60000, general API timeout


# MongoDB Configuration
# Host: 'mongodb_db' matches the service name in your docker-compose.yml
spring.data.mongodb.host=mongodb_db
spring.data.mongodb.port=27017
spring.data.mongodb.database=my_app_mongo_db
# Uncomment and add if using authentication for MongoDB (must match docker-compose.yml)
# spring.data.mongodb.username=my_mongo_user
# spring.data.mongodb.password=my_mongo_password

# Kafka Admin Configuration (for auto-creating topics)
spring.kafka.admin.auto-create=true
spring.kafka.producer.topic.name=trade-topic